##RockSat-C 2016 Graphing Utility
##Author: David Colclazier
##GPL V2
##RScript.exe source is available at https://github.com/wch/r-source
##To Run, tweak the tweakables, select all (Ctrl-A) and press (Ctrl-R) within RGui.
##Download RGui from... INSERT LINK
##RScript.exe is licensed by

#clear variables from previous session (dev-use only I think)
rm(list = setdiff(ls(), lsf.str()))

cat("Creating graph... This could take a few minutes... \n");
cat("%gIf you'd like to start creating another graph in the meantime, select File -> Launch New GraphIt! Window.\n");

###########TWEAKABLE VARIABLES - OUTPUT!!!!!!!!!!!!!!!!!!!

outputExtension = "__OutputExtension__"
outputFilePath = "__OutputFilePath__"
xAxisLabel = "__xLabel__"                 #label for x-Axis
yAxisLabel = "__yLabel__"                 #label for y-Axis 
labelColor = "__LabelColor__"
labelSize = __LabelSize__
graphTitle = "__Title__"                 #title for graph
graphSubtitle = "__Subtitle__"              #subtitle for graph
plotWidth = __GraphWidth__                      #changes width of pdf plot (physical size in inches... larger width, smaller time-range = higher resolution)
plotHeight = __GraphHeight__                   	#changes height of pdf plot (physical size in inches)


########FirstPlotSettings!!!!!!!!!!!!!!!!!!!!!!!!
firstPlotDataPath = "__FirstPlotPath__"
graphType = "__FirstPlotGraphType__"                   	#p = points, l = line, b = both, o = overplotted, h = histogram or high-density, n = none, s,S = stair
plotColor = "__FirstPlotColor__"	            #http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf
domainMin = __FirstPlotDomainMin__                       
domainMax = __FirstPlotDomainMax__
domainHashPeriod  = __FirstPlotDomainHashPeriod__      		 
rangeMin = __FirstPlotRangeMin__
rangeMax = __FirstPlotRangeMax__			
rangeHashPeriod = __FirstPlotRangeHashPeriod__


cat("All graph information received - continuing.\n");

##################################################################################################################
############    MESS WITH THE STUFF BELOW AT YOUR OWN RISK... I'D MAKE A BACKUP BEFORE CONTINUING.   #############
##################################################################################################################


########################################
##### BEGIN FUNCTION DECLARATIONS ######
########################################


### determines the function to be used based on the file type we've provided
getFileType <- function(extension){
	if(extension == ".pdf")  { return(pdf) }
	if(extension == ".jpeg") { return(jpeg) }
	if(extension == ".png")  { return(png) }
}

###plots the data
graphIt <- function(x, y, xL, yL, plotType){

	fileType <- getFileType(outputExtension);

	#outputFileName = getOutputFileName(basename(firstPlotDataPath ));

	if(outputExtension == ".pdf"){
		cat("Creating output file with .pdf extension.\n");
		fileType (outputFilePath, width=plotWidth, height=plotHeight);
	}
	else if(outputExtension == ".jpg"){
		cat("Creating output file with .jpeg extension.\n");
		fileType (outputFilePath, width=plotWidth, height=plotHeight, units = "in", res = 600);
	}
	else if(outputExtension == ".png"){
		cat("Creating output file with .png extension.\n");
		fileType (outputFilePath, width=plotWidth, height=plotHeight, units = "in", res = 600);
	}
	domainPeriod = (domainMax - domainMin)/domainHashPeriod;
	rangePeriod = (rangeMax - rangeMin)/rangeHashPeriod;
	plot(x, y, xlim = xL, ylim = yL, type = plotType, col = plotColor, pch=".", cex=2, main = graphTitle, 
			sub = graphSubtitle, xlab = xAxisLabel, ylab = yAxisLabel, xaxp = c(domainMin,domainMax,domainPeriod),
			yaxp = c(rangeMin, rangeMax, rangePeriod), col.lab = labelColor, cex.lab = labelSize);

	grid();
	cat("Finished graphing the original plot.\n");
}

################################
####### MAIN SCRIPT BODY #######
################################


cat("Importing data for original plot");
data <- read.table(firstPlotDataPath,header=T,sep=",");

cat("Data import complete.\nGraphing something...\n");
graphIt(data$__FirstPlotDomainDataColumnName__, data$__FirstPlotRangeDataColumnName__, c(domainMin, domainMax), c(rangeMin, rangeMax), graphType)

cat("Graphing additional plots (if any)... This could take a couple of minutes.\n");


##PLOT ADDITIONS##


cat("Graph generation complete!!\n")
dev.off();
cat(paste("File saved successfully to ",outputFilePath,"\n"));



